<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "<http://mybatis.org/dtd/mybatis-3-mapper.dtd>">

<mapper namespace="com.example.demo.shopping.mapper.OrderMapper">
    <select id="getUserId" resultType="java.lang.Long">
        select user_id from `order` where id=#{param1};
    </select>

    <select id="getOrderByDay" resultType="java.lang.Object">
        <if test = "name == 'orderNum'">
            SELECT COUNT(*) FROM `order` WHERE TO_DAYS(date_sub(now() ,INTERVAL #{i} DAY)) - TO_DAYS(create_date) = 1
        </if>

        <if test = "name == 'dropShip'">
            SELECT COUNT(*) FROM `order` WHERE TO_DAYS(date_sub(now() ,INTERVAL #{i} DAY)) - TO_DAYS(create_date) = 1 and (state = "待发货" or state = "已催发货")
        </if>

        <if test = "name == 'pushDelivery'">
            SELECT COUNT(*) FROM `order` WHERE TO_DAYS(date_sub(now() ,INTERVAL #{i} DAY)) - TO_DAYS(create_date) = 1 and state = "已催发货"
        </if>

        <if test = "name == 'money'">
            SELECT SUM(deal_price) FROM `order` WHERE TO_DAYS(date_sub(now() ,INTERVAL #{i} DAY)) - TO_DAYS(create_date) = 1
        </if>
    </select>

    <select id="getOrderByMonth" resultType="java.lang.Object">
        <if test = "name == 'orderNum'">
            SELECT COUNT(*) FROM `order` WHERE  create_date LIKE '${date}%'
        </if>

        <if test = "name == 'dropShip'">
            SELECT COUNT(*) FROM `order` WHERE create_date LIKE '${date}%' and (state = "待发货" or state = "已催发货")
        </if>

        <if test = "name == 'pushDelivery'">
            SELECT COUNT(*) FROM `order` WHERE create_date LIKE '${date}%' and state = "已催发货"
        </if>

        <if test = "name == 'money'">
            SELECT SUM(deal_price) FROM `order` WHERE create_date LIKE '${date}%'
        </if>
    </select>

    <select id="selectClassifyNumber" resultType="com.example.demo.shopping.entity.dto.OrderClassifyNumberDTO">
        SELECT (SELECT `name` FROM goods_group where id = group_id) 'name',SUM(num) 'value' FROM `order` GROUP BY group_id
    </select>

    <select id="selectClassifyMoney" resultType="com.example.demo.shopping.entity.dto.OrderClassifyMoneyDTO">
        SELECT (SELECT `name` FROM goods_group where id = group_id) 'name',SUM(deal_price) 'value' FROM `order` GROUP BY group_id
    </select>

    <select id="getEvaluate" resultType="com.example.demo.shopping.entity.vo.OrderEvaluateVO">
        SELECT id,evaluate,score FROM `order` where goods_id = 2 AND !ISNULL(evaluate)
    </select>

</mapper>